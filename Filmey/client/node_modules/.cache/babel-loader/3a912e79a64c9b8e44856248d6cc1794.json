{"ast":null,"code":"import * as types from \"../actions/actionTypes\";\nconst initialState = [];\nexport default (function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let {\n    type,\n    payload\n  } = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (type) {\n    case types.ADD_IMDB_ITEM:\n      if (state.some(i => i.imdbID === payload.imdbID)) return state;\n      return [...state, payload];\n\n    case types.RATE_ITEM:\n      if (!state.some(i => i.imdbID === payload.imdbID)) return state;\n      return state.map(itm => {\n        return itm.imdbID === payload.imdbID ? payload : itm;\n      });\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["/Users/nouf/Documents/GitHub/2021-GP1-22/Filmey/client/src/redux/reducers/imdbReducers.js"],"names":["types","initialState","state","type","payload","ADD_IMDB_ITEM","some","i","imdbID","RATE_ITEM","map","itm"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,wBAAvB;AACA,MAAMC,YAAY,GAAG,EAArB;AAEA,gBAAe,YAA6C;AAAA,MAA5CC,KAA4C,uEAApCD,YAAoC;AAAA,MAAtB;AAAEE,IAAAA,IAAF;AAAQC,IAAAA;AAAR,GAAsB;;AAC1D,UAAQD,IAAR;AACE,SAAKH,KAAK,CAACK,aAAX;AACE,UAAIH,KAAK,CAACI,IAAN,CAAYC,CAAD,IAAOA,CAAC,CAACC,MAAF,KAAaJ,OAAO,CAACI,MAAvC,CAAJ,EAAoD,OAAON,KAAP;AACpD,aAAO,CAAC,GAAGA,KAAJ,EAAWE,OAAX,CAAP;;AACF,SAAKJ,KAAK,CAACS,SAAX;AACE,UAAI,CAACP,KAAK,CAACI,IAAN,CAAYC,CAAD,IAAOA,CAAC,CAACC,MAAF,KAAaJ,OAAO,CAACI,MAAvC,CAAL,EAAqD,OAAON,KAAP;AACrD,aAAOA,KAAK,CAACQ,GAAN,CAAWC,GAAD,IAAS;AACxB,eAAOA,GAAG,CAACH,MAAJ,KAAeJ,OAAO,CAACI,MAAvB,GAAgCJ,OAAhC,GAA0CO,GAAjD;AACD,OAFM,CAAP;;AAIF;AACE,aAAOT,KAAP;AAXJ;AAaD,CAdD","sourcesContent":["import * as types from \"../actions/actionTypes\";\nconst initialState = [];\n\nexport default (state = initialState, { type, payload }) => {\n  switch (type) {\n    case types.ADD_IMDB_ITEM:\n      if (state.some((i) => i.imdbID === payload.imdbID)) return state;\n      return [...state, payload];\n    case types.RATE_ITEM:\n      if (!state.some((i) => i.imdbID === payload.imdbID)) return state;\n      return state.map((itm) => {\n        return itm.imdbID === payload.imdbID ? payload : itm;\n      });\n\n    default:\n      return state;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}