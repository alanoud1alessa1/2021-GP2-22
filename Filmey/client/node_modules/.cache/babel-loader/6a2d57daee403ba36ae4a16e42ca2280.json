{"ast":null,"code":"import * as types from \"../actions/actionTypes\";\nconst initialState = [];\nexport default (function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let {\n    type,\n    payload\n  } = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (type) {\n    case types.GET_LISTS:\n      return payload;\n\n    case types.UPDATE_LIST:\n      return state.map(ls => {\n        return ls.id === payload.id ? { ...ls,\n          name: payload.name\n        } : ls;\n      });\n\n    case types.ADD_ITEM_TO_LIST:\n      return state.map(ls => {\n        return ls.id === payload.list_id ? { ...ls,\n          items: [...ls.items, payload.item]\n        } : ls;\n      });\n\n    case types.REMOVE_ITEM_FROM_LIST:\n      return state.map(ls => {\n        return ls.id === payload.list_id ? { ...ls,\n          items: ls.items.filter(i => i.imdbID !== payload.imdbID)\n        } : ls;\n      });\n\n    case types.ADD_LIST:\n      return [...state, payload];\n\n    case types.REMOVE_LIST:\n      return state.filter(lst => lst.id !== payload);\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["/Users/nouf/Documents/GitHub/2021-GP1-22/Filmey/client/src/redux/reducers/listReducers.js"],"names":["types","initialState","state","type","payload","GET_LISTS","UPDATE_LIST","map","ls","id","name","ADD_ITEM_TO_LIST","list_id","items","item","REMOVE_ITEM_FROM_LIST","filter","i","imdbID","ADD_LIST","REMOVE_LIST","lst"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,wBAAvB;AAEA,MAAMC,YAAY,GAAG,EAArB;AAEA,gBAAe,YAA6C;AAAA,MAA5CC,KAA4C,uEAApCD,YAAoC;AAAA,MAAtB;AAAEE,IAAAA,IAAF;AAAQC,IAAAA;AAAR,GAAsB;;AAC1D,UAAQD,IAAR;AACE,SAAKH,KAAK,CAACK,SAAX;AACE,aAAOD,OAAP;;AACF,SAAKJ,KAAK,CAACM,WAAX;AACE,aAAOJ,KAAK,CAACK,GAAN,CAAWC,EAAD,IAAQ;AACvB,eAAOA,EAAE,CAACC,EAAH,KAAUL,OAAO,CAACK,EAAlB,GAAuB,EAAE,GAAGD,EAAL;AAASE,UAAAA,IAAI,EAAEN,OAAO,CAACM;AAAvB,SAAvB,GAAuDF,EAA9D;AACD,OAFM,CAAP;;AAGF,SAAKR,KAAK,CAACW,gBAAX;AACE,aAAOT,KAAK,CAACK,GAAN,CAAWC,EAAD,IAAQ;AACvB,eAAOA,EAAE,CAACC,EAAH,KAAUL,OAAO,CAACQ,OAAlB,GACH,EAAE,GAAGJ,EAAL;AAASK,UAAAA,KAAK,EAAE,CAAC,GAAGL,EAAE,CAACK,KAAP,EAAcT,OAAO,CAACU,IAAtB;AAAhB,SADG,GAEHN,EAFJ;AAGD,OAJM,CAAP;;AAKF,SAAKR,KAAK,CAACe,qBAAX;AACE,aAAOb,KAAK,CAACK,GAAN,CAAWC,EAAD,IAAQ;AACvB,eAAOA,EAAE,CAACC,EAAH,KAAUL,OAAO,CAACQ,OAAlB,GACH,EACE,GAAGJ,EADL;AAEEK,UAAAA,KAAK,EAAEL,EAAE,CAACK,KAAH,CAASG,MAAT,CAAiBC,CAAD,IAAOA,CAAC,CAACC,MAAF,KAAad,OAAO,CAACc,MAA5C;AAFT,SADG,GAKHV,EALJ;AAMD,OAPM,CAAP;;AAQF,SAAKR,KAAK,CAACmB,QAAX;AACE,aAAO,CAAC,GAAGjB,KAAJ,EAAWE,OAAX,CAAP;;AACF,SAAKJ,KAAK,CAACoB,WAAX;AACE,aAAOlB,KAAK,CAACc,MAAN,CAAcK,GAAD,IAASA,GAAG,CAACZ,EAAJ,KAAWL,OAAjC,CAAP;;AACF;AACE,aAAOF,KAAP;AA3BJ;AA6BD,CA9BD","sourcesContent":["import * as types from \"../actions/actionTypes\";\n\nconst initialState = [];\n\nexport default (state = initialState, { type, payload }) => {\n  switch (type) {\n    case types.GET_LISTS:\n      return payload;\n    case types.UPDATE_LIST:\n      return state.map((ls) => {\n        return ls.id === payload.id ? { ...ls, name: payload.name } : ls;\n      });\n    case types.ADD_ITEM_TO_LIST:\n      return state.map((ls) => {\n        return ls.id === payload.list_id\n          ? { ...ls, items: [...ls.items, payload.item] }\n          : ls;\n      });\n    case types.REMOVE_ITEM_FROM_LIST:\n      return state.map((ls) => {\n        return ls.id === payload.list_id\n          ? {\n              ...ls,\n              items: ls.items.filter((i) => i.imdbID !== payload.imdbID),\n            }\n          : ls;\n      });\n    case types.ADD_LIST:\n      return [...state, payload];\n    case types.REMOVE_LIST:\n      return state.filter((lst) => lst.id !== payload);\n    default:\n      return state;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}