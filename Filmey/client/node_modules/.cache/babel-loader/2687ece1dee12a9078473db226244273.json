{"ast":null,"code":"import * as types from \"./actionTypes\";\nimport { LoginUser, SignupUser } from \"./api\";\nexport const SignIn = payload => {\n  return async dispatch => {\n    try {\n      const result = await LoginUser(payload);\n      await Auth(dispatch, result);\n    } catch (err) {\n      dispatch({\n        type: types.AUTH_FAIL,\n        payload: {\n          isAuth: false,\n          error: err.response.data.message,\n          serror: \"\"\n        }\n      });\n    }\n  };\n};\nexport const SignUp = payload => {\n  return async dispatch => {\n    try {\n      const result = await SignupUser(payload);\n      await Auth(dispatch, result);\n    } catch (err) {\n      dispatch({\n        type: types.SIGNUP_FAIL,\n        payload: {\n          isAuth: false,\n          serror: err.response.data.message,\n          error: \"\"\n        }\n      });\n    }\n  };\n};\nexport const SignOut = () => {\n  return async dispatch => {\n    dispatch({\n      type: types.LOGOUT\n    });\n  };\n};\n\nasync function Auth(dispatch, result) {\n  await dispatch({\n    type: types.AUTH_LOGIN,\n    payload: {\n      token: result,\n      isAuth: true,\n      error: \"\",\n      serror: \"\"\n    }\n  });\n}","map":{"version":3,"sources":["/Users/nouf/Documents/GitHub/2021-GP1-22/Filmey/client/src/redux/actions/authActions.js"],"names":["types","LoginUser","SignupUser","SignIn","payload","dispatch","result","Auth","err","type","AUTH_FAIL","isAuth","error","response","data","message","serror","SignUp","SIGNUP_FAIL","SignOut","LOGOUT","AUTH_LOGIN","token"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,eAAvB;AACA,SAASC,SAAT,EAAoBC,UAApB,QAAsC,OAAtC;AACA,OAAO,MAAMC,MAAM,GAAIC,OAAD,IAAa;AACjC,SAAO,MAAOC,QAAP,IAAoB;AACzB,QAAI;AACF,YAAMC,MAAM,GAAG,MAAML,SAAS,CAACG,OAAD,CAA9B;AAEA,YAAMG,IAAI,CAACF,QAAD,EAAWC,MAAX,CAAV;AACD,KAJD,CAIE,OAAOE,GAAP,EAAY;AACZH,MAAAA,QAAQ,CAAC;AACPI,QAAAA,IAAI,EAAET,KAAK,CAACU,SADL;AAEPN,QAAAA,OAAO,EAAE;AACPO,UAAAA,MAAM,EAAE,KADD;AAEPC,UAAAA,KAAK,EAAEJ,GAAG,CAACK,QAAJ,CAAaC,IAAb,CAAkBC,OAFlB;AAGPC,UAAAA,MAAM,EAAE;AAHD;AAFF,OAAD,CAAR;AAQD;AACF,GAfD;AAgBD,CAjBM;AAmBP,OAAO,MAAMC,MAAM,GAAIb,OAAD,IAAa;AACjC,SAAO,MAAOC,QAAP,IAAoB;AACzB,QAAI;AACF,YAAMC,MAAM,GAAG,MAAMJ,UAAU,CAACE,OAAD,CAA/B;AACA,YAAMG,IAAI,CAACF,QAAD,EAAWC,MAAX,CAAV;AACD,KAHD,CAGE,OAAOE,GAAP,EAAY;AACZH,MAAAA,QAAQ,CAAC;AACPI,QAAAA,IAAI,EAAET,KAAK,CAACkB,WADL;AAEPd,QAAAA,OAAO,EAAE;AACPO,UAAAA,MAAM,EAAE,KADD;AAEPK,UAAAA,MAAM,EAAER,GAAG,CAACK,QAAJ,CAAaC,IAAb,CAAkBC,OAFnB;AAGPH,UAAAA,KAAK,EAAE;AAHA;AAFF,OAAD,CAAR;AAQD;AACF,GAdD;AAeD,CAhBM;AAiBP,OAAO,MAAMO,OAAO,GAAG,MAAM;AAC3B,SAAO,MAAOd,QAAP,IAAoB;AACzBA,IAAAA,QAAQ,CAAC;AACPI,MAAAA,IAAI,EAAET,KAAK,CAACoB;AADL,KAAD,CAAR;AAGD,GAJD;AAKD,CANM;;AAOP,eAAeb,IAAf,CAAoBF,QAApB,EAA8BC,MAA9B,EAAsC;AACpC,QAAMD,QAAQ,CAAC;AACbI,IAAAA,IAAI,EAAET,KAAK,CAACqB,UADC;AAEbjB,IAAAA,OAAO,EAAE;AAAEkB,MAAAA,KAAK,EAAEhB,MAAT;AAAiBK,MAAAA,MAAM,EAAE,IAAzB;AAA+BC,MAAAA,KAAK,EAAE,EAAtC;AAA0CI,MAAAA,MAAM,EAAE;AAAlD;AAFI,GAAD,CAAd;AAID","sourcesContent":["import * as types from \"./actionTypes\";\nimport { LoginUser, SignupUser } from \"./api\";\nexport const SignIn = (payload) => {\n  return async (dispatch) => {\n    try {\n      const result = await LoginUser(payload);\n\n      await Auth(dispatch, result);\n    } catch (err) {\n      dispatch({\n        type: types.AUTH_FAIL,\n        payload: {\n          isAuth: false,\n          error: err.response.data.message,\n          serror: \"\",\n        },\n      });\n    }\n  };\n};\n\nexport const SignUp = (payload) => {\n  return async (dispatch) => {\n    try {\n      const result = await SignupUser(payload);\n      await Auth(dispatch, result);\n    } catch (err) {\n      dispatch({\n        type: types.SIGNUP_FAIL,\n        payload: {\n          isAuth: false,\n          serror: err.response.data.message,\n          error: \"\",\n        },\n      });\n    }\n  };\n};\nexport const SignOut = () => {\n  return async (dispatch) => {\n    dispatch({\n      type: types.LOGOUT,\n    });\n  };\n};\nasync function Auth(dispatch, result) {\n  await dispatch({\n    type: types.AUTH_LOGIN,\n    payload: { token: result, isAuth: true, error: \"\", serror: \"\" },\n  });\n}\n"]},"metadata":{},"sourceType":"module"}