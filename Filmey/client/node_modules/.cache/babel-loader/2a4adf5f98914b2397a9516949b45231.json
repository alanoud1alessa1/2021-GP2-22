{"ast":null,"code":"import axios from \"axios\";\nconst API_URL = \"http://localhost:5050/api/v1/\";\nexport const LoginUser = async payload => {\n  const res = await axios.post(API_URL + \"users/login\", payload);\n  return res.data;\n};\nexport const SignupUser = async payload => {\n  const res = await axios.put(API_URL + \"users/\", payload);\n  return res.data;\n};\nexport const GetOMDBItem = async (imdbID, getState) => {\n  const state = getState();\n  const token = state.session.token;\n\n  if (state.imdbItems.some(i => i.imdbID === imdbID)) {\n    return state.imdbItems.find(i => i.imdbID === imdbID);\n  }\n\n  const res = await axios.get(API_URL + \"omdb/\" + imdbID, {\n    headers: {\n      authorization: \"Bearer \" + token\n    }\n  });\n  return res.data;\n};\nexport const SearchOMDB = async (search, page, getState) => {\n  const state = getState();\n  const defaultSize = 10; // set by API\n\n  const token = state.session.token;\n\n  if (search === state.searchResults.search && page <= state.searchResults.page) {\n    const start = (page - 1) * defaultSize;\n    return state.searchResults.res.slice(start, start + defaultSize);\n  }\n\n  const res = await axios.post(API_URL + \"omdb/\", {\n    search,\n    page\n  }, {\n    headers: {\n      authorization: \"Bearer \" + token\n    }\n  });\n  return res.data;\n};\nexport const AddUserList = async (payload, getState) => {\n  const state = getState();\n  const token = state.session.token;\n  const res = await axios.put(API_URL + \"lists/\", payload, {\n    headers: {\n      authorization: \"Bearer \" + token\n    }\n  });\n  return res.data;\n};\nexport const RemoveUserList = async (payload, getState) => {\n  const state = getState();\n  const token = state.session.token;\n  const res = await axios.delete(API_URL + \"lists/\" + payload, {\n    headers: {\n      authorization: \"Bearer \" + token\n    }\n  });\n  return res.data;\n};\nexport const GetUserLists = async getState => {\n  const state = getState();\n  const token = state.session.token;\n  const res = await axios.get(API_URL + \"lists/\", {\n    headers: {\n      authorization: \"Bearer \" + token\n    }\n  });\n  return res.data;\n};\nexport const UpdateUserList = async (payload, getState) => {\n  const state = getState();\n  const token = state.session.token;\n  const res = await axios.post(API_URL + \"lists/\", payload, {\n    headers: {\n      authorization: \"Bearer \" + token\n    }\n  });\n  return res.data;\n};\nexport const AddItem = async (payload, getState) => {\n  const token = getState().session.token;\n  let item = {\n    imdbID: payload.imdbID,\n    name: payload.Title,\n    img_url: payload.Poster,\n    type_id: payload.Type === \"movie\" ? 1 : payload.Genre.includes(\"Animation\") & payload.Language.includes(\"Japanese\") ? 3 : 2\n  };\n  const res = await axios.put(API_URL + \"/items\", item, {\n    headers: {\n      authorization: \"Bearer \" + token\n    }\n  });\n  return res;\n};\nexport const AddItemToList = async (payload, list_id, getState) => {\n  const token = getState().session.token;\n  const res = await AddItem(payload, getState);\n  await axios.put(API_URL + \"items/inlist\", {\n    imdbID: payload.imdbID,\n    list_id\n  }, {\n    headers: {\n      authorization: \"Bearer \" + token\n    }\n  });\n  return res.data;\n};\nexport const RemoveItemFromList = async (payload, getState) => {\n  const state = getState();\n  const token = state.session.token;\n  await axios.post(API_URL + \"items/inlist\", payload, {\n    headers: {\n      authorization: \"Bearer \" + token\n    }\n  });\n};\nexport const RateUserItem = async (payload, getState) => {\n  const state = getState();\n  const token = state.session.token;\n  const dbItm = await AddItem(payload, getState);\n  return axios.post(API_URL + \"items/rate\", {\n    stars: payload.stars,\n    id: dbItm.id\n  }, {\n    headers: {\n      authorization: \"Bearer \" + token\n    }\n  });\n};","map":{"version":3,"sources":["/Users/nouf/Documents/GitHub/2021-GP1-22/Filmey/client/src/redux/actions/api.js"],"names":["axios","API_URL","LoginUser","payload","res","post","data","SignupUser","put","GetOMDBItem","imdbID","getState","state","token","session","imdbItems","some","i","find","get","headers","authorization","SearchOMDB","search","page","defaultSize","searchResults","start","slice","AddUserList","RemoveUserList","delete","GetUserLists","UpdateUserList","AddItem","item","name","Title","img_url","Poster","type_id","Type","Genre","includes","Language","AddItemToList","list_id","RemoveItemFromList","RateUserItem","dbItm","stars","id"],"mappings":"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","sourcesContent":["import axios from \"axios\";\n\nconst API_URL = \"http://localhost:5050/api/v1/\";\n\nexport const LoginUser = async (payload) => {\n  const res = await axios.post(API_URL + \"users/login\", payload);\n  return res.data;\n};\nexport const SignupUser = async (payload) => {\n  const res = await axios.put(API_URL + \"users/\", payload);\n  return res.data;\n};\n\nexport const GetOMDBItem = async (imdbID, getState) => {\n  const state = getState();\n\n  const token = state.session.token;\n\n  if (state.imdbItems.some((i) => i.imdbID === imdbID)) {\n    return state.imdbItems.find((i) => i.imdbID === imdbID);\n  }\n  const res = await axios.get(API_URL + \"omdb/\" + imdbID, {\n    headers: {\n      authorization: \"Bearer \" + token,\n    },\n  });\n  return res.data;\n};\nexport const SearchOMDB = async (search, page, getState) => {\n  const state = getState();\n  const defaultSize = 10; // set by API\n  const token = state.session.token;\n  if (\n    search === state.searchResults.search &&\n    page <= state.searchResults.page\n  ) {\n    const start = (page - 1) * defaultSize;\n    return state.searchResults.res.slice(start, start + defaultSize);\n  }\n  const res = await axios.post(\n    API_URL + \"omdb/\",\n    { search, page },\n    {\n      headers: {\n        authorization: \"Bearer \" + token,\n      },\n    }\n  );\n  return res.data;\n};\nexport const AddUserList = async (payload, getState) => {\n  const state = getState();\n  const token = state.session.token;\n\n  const res = await axios.put(API_URL + \"lists/\", payload, {\n    headers: {\n      authorization: \"Bearer \" + token,\n    },\n  });\n  return res.data;\n};\nexport const RemoveUserList = async (payload, getState) => {\n  const state = getState();\n  const token = state.session.token;\n\n  const res = await axios.delete(API_URL + \"lists/\" + payload, {\n    headers: {\n      authorization: \"Bearer \" + token,\n    },\n  });\n  return res.data;\n};\nexport const GetUserLists = async (getState) => {\n  const state = getState();\n  const token = state.session.token;\n\n  const res = await axios.get(API_URL + \"lists/\", {\n    headers: {\n      authorization: \"Bearer \" + token,\n    },\n  });\n  return res.data;\n};\nexport const UpdateUserList = async (payload, getState) => {\n  const state = getState();\n  const token = state.session.token;\n  const res = await axios.post(API_URL + \"lists/\", payload, {\n    headers: {\n      authorization: \"Bearer \" + token,\n    },\n  });\n  return res.data;\n};\nexport const AddItem = async (payload, getState) => {\n  const token = getState().session.token;\n  let item = {\n    imdbID: payload.imdbID,\n    name: payload.Title,\n    img_url: payload.Poster,\n    type_id:\n      payload.Type === \"movie\"\n        ? 1\n        : payload.Genre.includes(\"Animation\") &\n          payload.Language.includes(\"Japanese\")\n        ? 3\n        : 2,\n  };\n  const res = await axios.put(API_URL + \"/items\", item, {\n    headers: {\n      authorization: \"Bearer \" + token,\n    },\n  });\n  return res;\n};\n\nexport const AddItemToList = async (payload, list_id, getState) => {\n  const token = getState().session.token;\n  const res = await AddItem(payload, getState);\n  await axios.put(\n    API_URL + \"items/inlist\",\n    {\n      imdbID: payload.imdbID,\n      list_id,\n    },\n    {\n      headers: {\n        authorization: \"Bearer \" + token,\n      },\n    }\n  );\n  return res.data;\n};\n\nexport const RemoveItemFromList = async (payload, getState) => {\n  const state = getState();\n  const token = state.session.token;\n  await axios.post(API_URL + \"items/inlist\", payload, {\n    headers: {\n      authorization: \"Bearer \" + token,\n    },\n  });\n};\n\nexport const RateUserItem = async (payload, getState) => {\n  const state = getState();\n  const token = state.session.token;\n  const dbItm = await AddItem(payload, getState);\n  return axios.post(\n    API_URL + \"items/rate\",\n    {\n      stars: payload.stars,\n      id: dbItm.id,\n    },\n    {\n      headers: {\n        authorization: \"Bearer \" + token,\n      },\n    }\n  );\n};\n"]},"metadata":{},"sourceType":"module"}