import * as React from 'react';
import FieldsService from './utils/FieldsService';
/**
 * @hidden
 */
export declare const TreeViewItemPropsContext: React.Context<(props: TreeViewItemProps) => TreeViewItemProps>;
/**
 * @hidden
 */
export interface TreeViewItemProps {
    item: any;
    itemId: string;
    treeGuid: string;
    animate: boolean;
    focusedItemId?: string;
    tabbableItemId: string;
    fieldsService: FieldsService;
    itemUI?: React.ComponentType<{
        item: any;
        itemHierarchicalIndex: string;
    }>;
    ariaMultiSelectable: boolean;
    onItemClick: any;
    expandIcons?: boolean;
    onExpandChange: any;
    onCheckChange: any;
    checkboxes?: boolean;
    onFocusDomElNeeded: any;
    draggable?: boolean;
    onPress: any;
    onDrag: any;
    onRelease: any;
}
/**
 * @hidden
 */
declare class TreeViewItemWithoutContext extends React.Component<TreeViewItemProps> {
    private itemElement;
    private checkboxElement;
    private itemGuid;
    render(): JSX.Element;
    componentDidMount(): void;
    componentDidUpdate(prevProps: TreeViewItemProps): void;
    private renderCheckbox;
    private renderExpandIcon;
    private renderSubitemsIfApplicable;
    private renderItemInPart;
    private onCheckChange;
    private onExpandChange;
    private onItemClick;
    private onPress;
    private onDrag;
    private onRelease;
    private readonly fieldsSvc;
    private readonly itemId;
    private readonly item;
    private readonly tabIndex;
    private readonly ariaExpanded;
    private readonly ariaChecked;
    private readonly ariaSelected;
    private getIconClassName;
    private getRootClassName;
    private getContentClassName;
    private assignDraggableMeta;
}
/**
 * @hidden
 */
export declare const TreeViewItem: React.ForwardRefExoticComponent<TreeViewItemProps & React.RefAttributes<TreeViewItemWithoutContext>>;
export {};
