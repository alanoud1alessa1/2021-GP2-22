import * as React from 'react';
/**
 * Represents the tag data.
 */
export interface TagData {
    /**
     * Represents the text of the tag.
     */
    text: string;
    /**
     * Represents the data items which correspond to the tag.
     */
    data: Array<any>;
}
/**
 * @hidden
 */
export interface TagListProps {
    data: Array<TagData>;
    guid: string;
    focused?: TagData;
    onTagDelete: (items: Array<any>, event: React.MouseEvent<HTMLSpanElement>) => void;
    tagRender?: (tagData: TagData, li: React.ReactElement<HTMLLIElement>) => React.ReactElement<HTMLLIElement> | null;
    tag?: React.ComponentType<{
        tagData: TagData;
        guid: string;
        focusedTag?: TagData;
        onTagDelete: (items: Array<any>, event: React.MouseEvent<HTMLSpanElement>) => void;
    }>;
}
/**
 * @hidden
 */
export default class TagList extends React.Component<TagListProps, {}> {
    render(): JSX.Element;
}
