import * as React from 'react';
/**
 * @hidden
 */
declare type Partial<T> = {
    [P in keyof T]?: T[P];
};
/**
 * @hidden
 */
export declare type CustomComponent<P extends {}> = React.ComponentType<P>;
/**
 * @hidden
 */
export declare const useCustomComponent: <P extends any>(comp: React.ComponentType<P>) => [string | React.ComponentClass<Partial<P> & {
    ref?: React.Ref<any>;
}, any> | React.FunctionComponent<Partial<P> & {
    ref?: React.Ref<any>;
}>, {} | P];
export {};
